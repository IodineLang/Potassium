#!/usr/bin/mono /usr/lib/iodine/iodine.exe  
use potassium.response;
use potassium.request;
use potassium.views;
use potassium.router;
use json;
use os;

func main () {
    urlList = List ();
    urlList.add(router.URLItem("/", views.View(request.GetRequest(), okView)));
    urlList.add(router.URLItem("/", views.View(request.PostRequest(), postView)));
    urlList.add(router.URLItem("/bye", views.View(request.GetRequest(), 
                                                  byeView)));
    urlList.add(router.URLItem("/404", views.View(request.AnyRequest(), 
                                                     notFoundView)));
    urlSpec = router.URLSpec(urlList, "/404");
    xRouter = router.Router(urlSpec, os.getEnv("PATH_INFO"));
    
    xRouter.run();
}

func notFoundView (requestData) {
    resp = HashMap ();
    resp["response"] = "Unknown request.";
    return response.JSONResponse(json.dump(resp), 404);
}

func okView(requestData) {
    resp = HashMap ();
    if (requestData.cookies.contains ("token")) {
        resp["response"] = requestData.cookies ["token"];
    }
    else {
        resp ["response"] = "No token set.";
    }
    return response.JSONResponse(json.dump(resp), 200);
}

func byeView(requestData) {
    resp = HashMap ();
    resp["response"] = "Bye!";
    return response.JSONResponse(json.dump(resp), 200);
}

func postView(requestData) {
    return response.HTMLResponse("<h1>Heh.</h1>", 200);
}
